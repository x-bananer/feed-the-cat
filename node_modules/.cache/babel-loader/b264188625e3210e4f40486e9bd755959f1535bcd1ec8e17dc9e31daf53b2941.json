{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_GameStart = _resolveComponent(\"GameStart\");\n  const _component_GameCity = _resolveComponent(\"GameCity\");\n  const _component_GameField = _resolveComponent(\"GameField\");\n  const _component_GameRules = _resolveComponent(\"GameRules\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_ctx.screens.start ? (_openBlock(), _createBlock(_component_GameStart, {\n    key: 0\n  })) : _createCommentVNode(\"\", true), _ctx.screens.city ? (_openBlock(), _createBlock(_component_GameCity, {\n    key: 1\n  })) : _createCommentVNode(\"\", true), _ctx.screens.game ? (_openBlock(), _createBlock(_component_GameField, {\n    key: 2\n  })) : _createCommentVNode(\"\", true), _ctx.screens.rules ? (_openBlock(), _createBlock(_component_GameRules, {\n    key: 3\n  })) : _createCommentVNode(\"\", true)]);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1","_ctx","screens","start","_createBlock","_component_GameStart","key","_createCommentVNode","city","_component_GameCity","game","_component_GameField","rules","_component_GameRules"],"sources":["/Users/ksenia/Desktop/PET/feed-the-cat/src/components/GameScreen.vue"],"sourcesContent":["<template>\n\t<div id=\"app\">\n        <template v-if=\"screens.start\">\n            <GameStart />\n        </template>\n        <template v-if=\"screens.city\">\n            <GameCity />\n        </template>\n        <template v-if=\"screens.game\">\n            <GameField />\n        </template>\n\t\t<template v-if=\"screens.rules\">\n            <GameRules />\n        </template>\n\t</div>\n</template>\n\n<script>\nimport { mapState } from \"pinia\";\nimport { useGameStore } from \"@/stores/gameStore\";\nimport GameField from \"@/components/GameField.vue\";\nimport GameStart from \"@/components/GameStart.vue\";\nimport GameCity from \"@/components/GameCity.vue\";\nimport GameRules from \"@/components/GameRules.vue\";\n\nexport default {\n\tname: \"App\",\n\tcomponents: {\n\t\tGameField,\n\t\tGameStart,\n\t\tGameCity,\n\t\tGameRules,\n\t},\n\tcomputed: {\n\t\t...mapState(useGameStore, [\n            \"screens\",\n\t\t]),\n\t},\t\n\tmethods: {},\n};\n</script>"],"mappings":";;EACMA,EAAE,EAAC;AAAK;;;;;;uBAAbC,mBAAA,CAaM,OAbNC,UAaM,GAZiBC,IAAA,CAAAC,OAAO,CAACC,KAAK,I,cACzBC,YAAA,CAAaC,oBAAA;IAHzBC,GAAA;EAAA,MAAAC,mBAAA,YAKwBN,IAAA,CAAAC,OAAO,CAACM,IAAI,I,cACxBJ,YAAA,CAAYK,mBAAA;IANxBH,GAAA;EAAA,MAAAC,mBAAA,YAQwBN,IAAA,CAAAC,OAAO,CAACQ,IAAI,I,cACxBN,YAAA,CAAaO,oBAAA;IATzBL,GAAA;EAAA,MAAAC,mBAAA,YAWkBN,IAAA,CAAAC,OAAO,CAACU,KAAK,I,cACnBR,YAAA,CAAaS,oBAAA;IAZzBP,GAAA;EAAA,MAAAC,mBAAA,W","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}